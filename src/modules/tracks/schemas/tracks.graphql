type Track {
    id: ID!
    title: String!
    album: Album
    artists: [Artist]
    bands: [Band]
    duration: Int
    released: Int
    genres: [Genre]
}

input TrackInput {
    title: String!
    albumId: ID
    artistsIds: [ID]
    bandsIds: [ID]
    duration: Int
    released: Int
    genresIds: [ID]
}

type Query {
    tracks(limit: Int, offset: Int): [Track]
    track(id: ID!): Track
}

type Mutation {
    createTrack(createTrackInput: TrackInput): Track
    updateTrack(updateTrackInput: TrackInput, id: ID!): Track
    deleteTrack(id: ID!): Delete
}
