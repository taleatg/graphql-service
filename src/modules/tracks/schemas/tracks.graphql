type Track {
    id: ID!
    title: String!
    album: Album
    artists: [Artist]
    bands: [Band]
    duration: Int
    released: Int
    genres: [Genre]
}

input TrackInput {
    title: String!
    albums: [BandInput]
    bands: [BandInput]
    duration: Int
    released: Int
    genres: [GenreInput]
}

input createTrackInput {
    title: String!
    albums: [AlbumInput]
    bands: [BandInput]
    duration: Int
    released: Int
    genres: [GenreInput]
}

input updateTrackInput {
    id: ID!
    title: String!
    albums: [AlbumInput]
    bands: [BandInput]
    duration: Int
    released: Int
    genres: [GenreInput]
}

type Query {
    tracks(limit: Int, offset: Int): [Track]
    track(id: ID!): Track
}

type Mutation {
    createTrack(createTrackInput: createTrackInput): Track!
    updateTrack(updateTrackInput: updateTrackInput): Track!
    deleteTrack(id: ID!): Delete
}
