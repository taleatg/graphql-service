type Member {
    firstName: String,
    secondName: String,
    middleName: String,
    instrument: String
    years: [String]
}

type Band {
    id: ID!
    name: String
    origin: String
    members: [Member]
    website: String
    genres: [Genre]
}

input MemberInput {
  artist: String
  instrument: String
  years: String
}

input BandInput {
    name: String
    origin: String
    members: [MemberInput]
    website: String
    genres: [GenreInput]
}

type Query {
  bands(limit: Int, offset: Int): [Band]
  band(id: ID!): Band
}

type Mutation {
  createBand(createBandInput: BandInput): Band
  updateBand(updateBandInput: BandInput, id: ID!): Band
  deleteBand(id: ID!): Delete
}
